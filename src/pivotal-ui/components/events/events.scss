/*doc
---
title: Event Handling
name: event_handling
categories:
  - css_base_eventhandling
---

Event handling in our system is handled through a document level message bus.
This system works by publishing events when a component performs an action and
letting that action bubble up to the `document`. If another component needs to
interact with the first component, it can listen for that component's events
at the `document` level.

Example:

Component ğŸ’£ has a method `ğŸ”¥`. In the code, you might see:


<code class="pam">
ğŸ’£.prototype.ğŸ”¥ = function(blaze){
  $(this).trigger("ğŸ’£:ğŸ”¥ed:before");
  //do things

  // this represent the element the component is referring to
  
  // In many cases the method name is present tense and the event
  // name is a past tense version of that method name. This is
  // a pretty common pattern reflected here.
  $(this).trigger("ğŸ’£:ğŸ”¥ed");
};
</code>

In another component ğŸš°, we have a method ğŸŒŠ. We know that when the ğŸ’£
component has the ğŸ”¥ method called and that method is completed, the ğŸš°
component needs to call the ğŸŒŠ method.

<code class="pam">
$(document).on("ğŸ’£:ğŸ”¥ed", function(){
  ğŸš°.ğŸŒŠ();
});
</code>



*/
